{"uid":"5aeb6443fdc648c8","name":"test_update_operation","fullName":"tests.test_operations.TestOperations#test_update_operation","historyId":"035ac1fcef8aa8f750371f923965b7a1","time":{"start":1760086939263,"stop":1760086939263,"duration":0},"status":"broken","statusMessage":"pydantic_core._pydantic_core.ValidationError: 1 validation error for OperationSchema\nid\n  Field required [type=missing, input_value={'error': 400, 'message':...ionDate': '2025-09-30'}}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.11/v/missing","statusTrace":"operations_client = <clients.operations_client.OperationsClient object at 0x7fa0ee1aba70>\n\n    @pytest.fixture\n    def function_operation(operations_client: OperationsClient) -> OperationSchema:\n>       operation = operations_client.create_operation()\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\noperations_client = <clients.operations_client.OperationsClient object at 0x7fa0ee1aba70>\n\nfixtures/operations.py:15: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <clients.operations_client.OperationsClient object at 0x7fa0ee1aba70>\nrequest = CreateOperationSchema(debit=-31.9132194078, credit=-94.30277, category='restaurants', description='Middle real behind life major hard.', transaction_date=datetime.date(2025, 9, 30))\n\n    def create_operation(self, request: CreateOperationSchema | None = None) -> OperationSchema:\n        if request is None:\n            request = CreateOperationSchema()\n        response = self.create_operation_api(request)\n        response.raise_for_status()\n>       return OperationSchema.model_validate_json(response.text)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE       pydantic_core._pydantic_core.ValidationError: 1 validation error for OperationSchema\nE       id\nE         Field required [type=missing, input_value={'error': 400, 'message':...ionDate': '2025-09-30'}}, input_type=dict]\nE           For further information visit https://errors.pydantic.dev/2.11/v/missing\n\nrequest    = CreateOperationSchema(debit=-31.9132194078, credit=-94.30277, category='restaurants', description='Middle real behind life major hard.', transaction_date=datetime.date(2025, 9, 30))\nresponse   = <Response [200]>\nself       = <clients.operations_client.OperationsClient object at 0x7fa0ee1aba70>\n\nclients/operations_client.py:38: ValidationError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1760086938442,"stop":1760086938443,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"settings","time":{"start":1760086938443,"stop":1760086938444,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"operations_client","time":{"start":1760086939264,"stop":1760086939264,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"function_operation","time":{"start":1760086939264,"stop":1760086939475,"duration":211},"status":"broken","statusMessage":"pydantic_core._pydantic_core.ValidationError: 1 validation error for OperationSchema\nid\n  Field required [type=missing, input_value={'error': 400, 'message':...ionDate': '2025-09-30'}}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.11/v/missing\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/site-packages/pluggy/_callers.py\", line 38, in run_old_style_hookwrapper\n    res = yield\n          ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/site-packages/pluggy/_callers.py\", line 139, in _multicall\n    teardown.throw(exception)\n  File \"/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/site-packages/pluggy/_callers.py\", line 53, in run_old_style_hookwrapper\n    return result.get_result()\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/site-packages/pluggy/_result.py\", line 103, in get_result\n    raise exc.with_traceback(tb)\n  File \"/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/site-packages/pluggy/_callers.py\", line 38, in run_old_style_hookwrapper\n    res = yield\n          ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/site-packages/pluggy/_callers.py\", line 139, in _multicall\n    teardown.throw(exception)\n  File \"/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/site-packages/pluggy/_callers.py\", line 121, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/site-packages/_pytest/fixtures.py\", line 1196, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/site-packages/_pytest/fixtures.py\", line 923, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/qa_guru_graduation_project_rest_api/qa_guru_graduation_project_rest_api/fixtures/operations.py\", line 15, in function_operation\n    operation = operations_client.create_operation()\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/qa_guru_graduation_project_rest_api/qa_guru_graduation_project_rest_api/clients/operations_client.py\", line 38, in create_operation\n    return OperationSchema.model_validate_json(response.text)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/site-packages/pydantic/main.py\", line 746, in model_validate_json\n    return cls.__pydantic_validator__.validate_json(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n","steps":[{"name":"Create operation","time":{"start":1760086939264,"stop":1760086939475,"duration":211},"status":"passed","steps":[{"name":"Make POST request to '/fakebank/accounts'","time":{"start":1760086939264,"stop":1760086939475,"duration":211},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"url","value":"'/fakebank/accounts'"},{"name":"json","value":"{'Debit': -31.9132194078, 'Credit': -94.30277, 'Category': 'restaurants', 'Description': 'Middle real behind life major hard.', 'transactionDate': '2025-09-30'}"},{"name":"data","value":"None"},{"name":"files","value":"None"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"operation","value":"CreateOperationSchema(debit=-31.9132194078, credit=-94.30277, category='restaurants', description='Middle real behind life major hard.', transaction_date=datetime.date(2025, 9, 30))"}],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"pydantic_core._pydantic_core.ValidationError: 1 validation error for OperationSchema\nid\n  Field required [type=missing, input_value={'error': 400, 'message':...ionDate': '2025-09-30'}}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.11/v/missing","statusTrace":"operations_client = <clients.operations_client.OperationsClient object at 0x7fa0ee1aba70>\n\n    @pytest.fixture\n    def function_operation(operations_client: OperationsClient) -> OperationSchema:\n>       operation = operations_client.create_operation()\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\noperations_client = <clients.operations_client.OperationsClient object at 0x7fa0ee1aba70>\n\nfixtures/operations.py:15: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <clients.operations_client.OperationsClient object at 0x7fa0ee1aba70>\nrequest = CreateOperationSchema(debit=-31.9132194078, credit=-94.30277, category='restaurants', description='Middle real behind life major hard.', transaction_date=datetime.date(2025, 9, 30))\n\n    def create_operation(self, request: CreateOperationSchema | None = None) -> OperationSchema:\n        if request is None:\n            request = CreateOperationSchema()\n        response = self.create_operation_api(request)\n        response.raise_for_status()\n>       return OperationSchema.model_validate_json(response.text)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE       pydantic_core._pydantic_core.ValidationError: 1 validation error for OperationSchema\nE       id\nE         Field required [type=missing, input_value={'error': 400, 'message':...ionDate': '2025-09-30'}}, input_type=dict]\nE           For further information visit https://errors.pydantic.dev/2.11/v/missing\n\nrequest    = CreateOperationSchema(debit=-31.9132194078, credit=-94.30277, category='restaurants', description='Middle real behind life major hard.', transaction_date=datetime.date(2025, 9, 30))\nresponse   = <Response [200]>\nself       = <clients.operations_client.OperationsClient object at 0x7fa0ee1aba70>\n\nclients/operations_client.py:38: ValidationError","steps":[],"attachments":[{"uid":"9b80ebf0731ce19d","name":"log","source":"9b80ebf0731ce19d.txt","type":"text/plain","size":213}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"epic","value":"Operations"},{"name":"feature","value":"Operations"},{"name":"tag","value":"regression"},{"name":"tag","value":"operations"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_operations"},{"name":"subSuite","value":"TestOperations"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"2188-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_operations"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":9,"unknown":0,"total":10},"items":[{"uid":"d1d6efd0f5295578","reportUrl":"https://falinpavel.github.io/qa_guru_graduation_project_rest_api/19//#testresult/d1d6efd0f5295578","status":"passed","time":{"start":1760085261976,"stop":1760085262039,"duration":63}},{"uid":"63875129fc001b14","reportUrl":"https://falinpavel.github.io/qa_guru_graduation_project_rest_api/18//#testresult/63875129fc001b14","status":"passed","time":{"start":1759871790049,"stop":1759871790113,"duration":64}},{"uid":"bcac8f4bd44b54f8","reportUrl":"https://falinpavel.github.io/qa_guru_graduation_project_rest_api/17//#testresult/bcac8f4bd44b54f8","status":"passed","time":{"start":1759871678982,"stop":1759871679064,"duration":82}},{"uid":"9268c9b781b8720d","reportUrl":"https://falinpavel.github.io/qa_guru_graduation_project_rest_api/16//#testresult/9268c9b781b8720d","status":"passed","time":{"start":1759849969348,"stop":1759849969383,"duration":35}},{"uid":"bae8fc6a40ebd9ff","reportUrl":"https://falinpavel.github.io/qa_guru_graduation_project_rest_api/15//#testresult/bae8fc6a40ebd9ff","status":"passed","time":{"start":1759778345109,"stop":1759778345146,"duration":37}},{"uid":"6d5c741d8344cff8","reportUrl":"https://falinpavel.github.io/qa_guru_graduation_project_rest_api/14//#testresult/6d5c741d8344cff8","status":"passed","time":{"start":1759747427441,"stop":1759747427506,"duration":65}},{"uid":"879a346be963799a","reportUrl":"https://falinpavel.github.io/qa_guru_graduation_project_rest_api/13//#testresult/879a346be963799a","status":"passed","time":{"start":1759746380353,"stop":1759746380414,"duration":61}},{"uid":"dec22f4e8e5a958f","reportUrl":"https://falinpavel.github.io/qa_guru_graduation_project_rest_api/12//#testresult/dec22f4e8e5a958f","status":"passed","time":{"start":1759746291611,"stop":1759746291659,"duration":48}},{"uid":"c1f4a2e390590c9d","reportUrl":"https://falinpavel.github.io/qa_guru_graduation_project_rest_api/11//#testresult/c1f4a2e390590c9d","status":"passed","time":{"start":1759744836268,"stop":1759744836303,"duration":35}}]},"tags":["operations","regression"]},"source":"5aeb6443fdc648c8.json","parameterValues":[]}